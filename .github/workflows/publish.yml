name: Publish
on:
  push:
    branches:
      - main
env:
  VERSION: ${GITHUB_SHA}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET }}
  TF_VAR_aws_access_key: ${{ secrets.AWS_KEY }}
  TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET }}
  STATE_BUCKET_KEY: ${{ secrets.STATE_KEY }}
  STATE_BUCKET: ${{ secrets.STATE }}
  TF_VAR_resources_bucket: ${{ secrets.STATE }}
  TF_VAR_resources_bucket_key: ${{ secrets.RESOURCES_BUCKET_KEY }}
  TF_VAR_region: ${{ secrets.AWS_REGION }}
  TF_VAR_dbname: ${{ secrets.DBNAME }}
  TF_VAR_dbuser: ${{ secrets.DBUSER }}

jobs:
  deployLambda:
    name: Package and Upload
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Set hash Variable
        run: echo TF_VAR_hash=${{ env.VERSION }} >> $GITHUB_ENV

      - name: Show hash Variable
        run: echo $TF_VAR_hash

      - name: Build + UnitTests
        run: |
          chmod +x mvnw 
          ./mvnw -Dhash=$TF_VAR_hash clean install

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        working-directory: terraform
        run: terraform init -backend-config="key=$STATE_BUCKET_KEY" -backend-config="bucket=$STATE_BUCKET" -backend-config="region=$TF_VAR_region"

      - name: code format
        id: fmt
        working-directory: terraform
        run: terraform fmt -check

      - name: Recreate Plan
        id: plan
        working-directory: terraform
        run: terraform plan -no-color -var-file=prod.tfvars
        continue-on-error: true

      - name: Exit on Plan Failure
        working-directory: terraform
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Recreate
        working-directory: terraform
        run: terraform apply -auto-approve -var-file=prod.tfvars
