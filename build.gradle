plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id("com.github.johnrengelman.shadow") version "8.1.1"
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer

group = 'com.trading.signal'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation("org.springframework.cloud:spring-cloud-starter-function-webflux:4.1.1")
	implementation("org.springframework.cloud:spring-cloud-function-adapter-aws:4.1.1")
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.cloud:spring-cloud-function-context'
	implementation 'com.tictactec:ta-lib:0.4.0'

	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.postgresql:r2dbc-postgresql'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.testcontainers:r2dbc'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'com.squareup.okhttp3:mockwebserver'
	testImplementation 'io.projectreactor:reactor-test'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.register('shadowTasks', ShadowJar) {
    archiveClassifier = "aws"
    dependencies {
        exclude(
                dependency("org.springframework.cloud:spring-cloud-function-web:4.1.1")
        )
    }
    // Required for Spring
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    transform( PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories']
        mergeStrategy = "append"
    }
}

tasks.named("assemble") {
	dependsOn(shadowTasks)
}
tasks.named('test') {
	useJUnitPlatform()
}
